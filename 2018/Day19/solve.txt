INSTRUCTION | ip |

#ip 4
addi 4 16 4 | 0  | <==> reg[4] += 16, ip += 16     << jump INIT

seti 1 5 1  | 1  | <==> reg[1] = 1                  > WHILE
seti 1 7 3  | 2  | <==> reg[3] = 1                  | reg[1] = 1;
mulr 1 3 5  | 3  | <==> reg[5] = reg[1] * reg[3]    | LBL1: reg[3] = 1;
eqrr 5 2 5  | 4  | <==> reg[5] = (reg[5] == reg[2]) | LBL2:
addr 5 4 4  | 5  | <==> reg[4] = ip += reg[5];      | if (reg[1] * reg[3] == reg[2]) {
addi 4 1 4  | 6  | <==> reg[4] += 1, ip += 1;       |   reg[0] += reg[1];
addr 1 0 0  | 7  | <==> reg[0] += reg[1];           | }
addi 3 1 3  | 8  | <==> reg[3] += 1;                | ++ reg[3];
gtrr 3 2 5  | 9  | <==> reg[5] = reg[3] > reg[2];   |
addr 4 5 4  | 10 | <==> reg[4] = ip += reg[5];      | if (reg[3] > reg[2]) {
seti 2 4 4  | 11 | <==> reg[4] = 2, ip = 2;         |	++ reg[1];
addi 1 1 1  | 12 | <==> reg[1] += 1;                |   if (reg[1] > reg[2]) {
gtrr 1 2 5  | 13 | <==> reg[5] = (reg[1] > reg[2])  |	  jump HALT!
addr 5 4 4  | 14 | <==> reg[4] = ip += reg[5];      |   } else {
seti 1 5 4  | 15 | <==> reg[4] = 1, ip = 1;         |     jump LBL1
                                                    |   }
                                                    | } else {
                                                    |   jump LBL2
                                                    | }

mulr 4 4 4  | 16 | <==> reg[4] ^ 2, ip ^ 2;        << HALT!

addi 2 2 2  | 17 | <==> reg[2] += 2;                > INIT:
mulr 2 2 2  | 18 | <==> reg[2] ^ 2                  |
mulr 4 2 2  | 19 | <==> reg[2] *= ip                |
muli 2 11 2 | 20 | <==> reg[2] *= 11                |
addi 5 2 5  | 21 | <==> reg[5] += 2                 | 
mulr 5 4 5  | 22 | <==> reg[5] *= ip                |
addi 5 18 5 | 23 | <==> reg[5] += 18                |
addr 2 5 2  | 24 | <==> reg[2] += reg[5]            | reg[2] = 4 * 19 * 11 + 2 * 22 + 18 = 898
addr 4 0 4  | 25 | <==> reg[4] = ip += reg[0]       |
seti 0 6 4  | 26 | <==> reg[4] = 0, ip = 0          | if (reg[0] == 1) {
setr 4 3 5  | 27 | <==> reg[5] = ip                 |   // with ip = 27
mulr 5 4 5  | 28 | <==> reg[5] *= ip                |   reg[2] += (ip * (ip + 1) + (ip + 2)) * (ip + 3) * 14 * (ip + 5);
addr 4 5 5  | 29 | <==> reg[5] += ip                |   // reg[2] += (27 * 28 + 29) * 30 * 14 * 32 = 10550400
mulr 4 5 5  | 30 | <==> reg[5] *= ip                |   reg[0] = 0;
muli 5 14 5 | 31 | <==> reg[5] *= 14                | }
mulr 5 4 5  | 32 | <==> reg[5] *= ip                |
addr 2 5 2  | 33 | <==> reg[2] += reg[5]            | jump WHILE
seti 0 2 0  | 34 | <==> reg[0] = 0                  |
seti 0 6 4  | 35 | <==> reg[4] = 0                  >