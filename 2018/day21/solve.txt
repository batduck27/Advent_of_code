INSTRUCTION       | ip |

#ip 3|
seti 123 0 4      | 0  | reg[4] = 123                > INIT_CHECK
bani 4 456 4      | 1  | reg[4] = reg[4] & 456 = 72  | while (123 & 456 != 72) {
eqri 4 72 4       | 2  | reg[4] = (reg[4] == 72) = 1 |   // this is a trap :D
addr 4 3 3        | 3  | reg[3] += 1                 | }
seti 0 0 3        | 4  | reg[3] = 0 // skipped       >
seti 0 9 4        | 5  | reg[4] = 0                  > INIT:
bori 4 65536 2    | 6  | reg[2] = 65536              |  reg[4] = 0
seti 6152285 4 4  | 7  | reg[4] = 6152285            > LBL1:
bani 2 255 1      | 8  | reg[1] = 0                  | reg[2] = reg[4] & 65536
addr 4 1 4        | 9  | reg[4] += reg[1]            | reg[4] = 6152285
bani 4 16777215 4 | 10 | reg[4] = 6152285            | reg[4] = (((reg[1] + reg[4]) & 16777215) * 65899) & 16777215
muli 4 65899 4    | 11 | reg[4] = 405429429215       | 
bani 4 16777215 4 | 12 | reg[4] = 8004575            | if (256 > reg[2]) {
gtir 256 2 1      | 13 | reg[1] = (256 > reg[2])     |   
addr 1 3 3        | 14 | reg[3] += (reg[1] == 0)     |
addi 3 1 3        | 15 | reg[3] += 1                 |
seti 27 4 3       | 16 | // skipped  (reg[3] = 27)   | }
seti 0 3 1        | 17 | reg[1] = 0
addi 1 1 5        | 18 | reg[5] = reg[1] + 1
muli 5 256 5      | 19 | reg[5] *= 256
gtrr 5 2 5        | 20 | reg[5] = (reg[5] > reg[2])
addr 5 3 3        | 21 | reg[3] += reg[5]
addi 3 1 3        | 22 | 
seti 25 9 3       | 23 | ----------------\ 
addi 1 1 1        | 24 |                  |
seti 17 4 3       | 25 |                  |
                                          |
setr 1 9 2        | 26 |       ----------/
seti 7 4 3        | 27 | 
eqrr 4 0 1        | 28 | 
addr 1 3 3        | 29 | 
seti 5 6 3        | 30 | 



RESULTING:
bool sw = true;

while (true) {
	if (sw) {
		reg[2] = reg[4] | 65536;
		reg[4] = 6152285;
	}

	sw = true;
	reg[1] = reg[2] & 255;
	reg[4] = (((reg[1] + reg[4]) & 16777215) * 65899) & 16777215;

	if (reg[2] < 256) {
		if (reg[4] == reg[0]) {
			HALT!
		} else {
			// do nothing
		}
	} else {
		reg[2] = reg[1] = reg[2] / 256;
		sw = false;
	}
}
